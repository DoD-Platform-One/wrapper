{{- if and .Values.bigbang.networkPolicies.enabled .Values.bigbang.istio.enabled (dig "network" "policies" true .Values.package) (eq (dig "istio" "injection" "enabled" .Values.package) "enabled") -}}
{{- $pkg := include "resourceName" .Values.package.name -}}
{{- $ingressList := list (dig "networkPolicies" "istioNamespaceSelectorIngress" "ingress" false (.Values | merge (dict))) -}}
{{- /* Add default selector if it isn't there */ -}}
{{- $defSel := (dict "selectors" (list (dict "matchLabels" (dict "app.kubernetes.io/name" $pkg)))) -}}
{{- range $host := .Values.package.istio.hosts -}}
{{- $host = merge $host $defSel  -}}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "resourceName" (printf "%s-gateway" $pkg) }}
  labels:
    {{- include "commonLabels" $ | nindent 4 }}
  annotations:
    bigbang.dso.mil/description: Allows ingress traffic from any Istio ingress gateway to exposed ports
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          app.kubernetes.io/name: {{ include "istioNamespaceSelectorIngress" $ }} # The dollar sign is used to remove the scope set by the range.
      podSelector:
        matchLabels:
          istio: ingressgateway
    {{- include "exposedPorts" $host | nindent 4 }}
---
{{- end -}}
{{- end -}}